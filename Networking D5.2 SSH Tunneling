Covert Channels
    Using common and legitimate protocols to transfer data in illegitimate ways.
    Unauthorized/hidden communication between entities.
    Utilizes computer system resources, mechanisms, or protocols.
    Transmits information contrary to design intent.
    Bypasses security, violates policies, leaks sensitive data.

Types of Covert Channels
    Storage
        Payload
        Header
            IP Header (TOS, IP ID, Flags + Fragmentation, and Options)
            TCP Header (Reserved, URG Pointer, and Options)

    Timing
        Modifying transmission of legitimate traffic
        Delaying packets between nodes
        Watch TTL changes
        Watch for variances between transmissions


Detect Covert Channels
    Host Analysis
        Requires knowledge of each applications expected behavior.

    Network Analysis
        A good understanding of your network and the common network protocols being used is the key

    Baselining of what is normal to detect what is abnormal


Detect Covert Channels with ICMP
    ICMP works with one request and one reply answer
        Type 8 code 0 request
        Type 0 code 0 answer

    Check for:
        Payload imbalance
        Request/responce imbalance
        Large payloads in response

Detect Covert Channels with DNS
    DNS is a request/response protocol
    1 request typically gets 1 response
    Payloads generally do no exceed 512 bytes
    Check for:
        Request/response imbalances
        Unusual payloads
        Burstiness or continuous use

Detect Covert Channels with HTTP
    Request/Response protocol to pull web content
    GET request may include .png, .exe, .(anything) files
    Can vary in sizes of payloads
    Typically "bursty" but not steady

---------------------------------------------------------------
Steganography
    Hiding messages inside legitimate information objects
        Methods:
            Injection
                  Done by inserting message into the unused (whitespace) of the file, usually in a graphic
                  Second most common method
                  Adds size to the file
                  Hard to detect unless you have original file
                  tools:
                    StegHide

            Substitution
                Done by inserting message into the insignificant portion of the file
                Most common method used
                Elements within a digital medium are replaced with hidden information
                Example:
                  Change color pallate (+1/-1)

            Propagation
               Generates a new file entirely
               Needs special software to manipulate file
               tools:
                StegSecret
                HyDEn
                Spammimic
---------------------------------------------------------------
SSH - Secure Shell
    Various Implementations (v1 and v2)
    Provides authentication, encryption, and integrity.
    Allows remote terminal sessions
    Can enable X11 Forwarding
    Used for tunneling and port forwarding
    Proxy connections

SSH Architecture
    Client vs Server vs Session
    Keys:
        User Key - Asymmetric public key used to identify the user to the server
        Host Key - Asymmetric public key used to identify the server to the user
        Session Key - Symmetric key created by the client and server to protect the sessionâ€™s communication.

Conf Files
    Client Configuration File (/etc/ssh/ssh_config)
    Server Configuration File (/etc/ssh/sshd_config)
    Known Hosts File (~/.ssh/known_hosts)


ssh-keygen -f "/home/student/.ssh/known_hosts" -R "172.16.82.106" - this command will remove an old host key

---------------------------------------------------------------
Tunneling/Port Forwardings

SSH Port Forwarding
Options:
    -L - Creates a port on the client mapped to a ip:port via the server
    -D - Creates a port on the client and sets up a SOCKS4 proxy tunnel where the target ip:port is specified dynamically
    -R - Creates the port on the server mapped to a ip:port via the client
    -NT - Do not execute a remote command and disable pseudo-tty (will hang window)

Local Port Forwarding
ssh -p <optional alt port> <user>@<server ip> -L <local bind port>:<tgt ip>:<tgt port> -NT
or
ssh -L <local bind port>:<tgt ip>:<tgt port> -p <alt port> <user>@<server ip> -NT

Local Port Forwardings to Local Host Example:
    Internet_Host:
    ssh student@172.16.1.15 -L 1122:localhost:22
    or
    ssh -L 1122:localhost:22 student@172.16.1.15

    ssh student@localhost -p 1122

Local Port Forwardings to Remote Host Example:
    Internet_Host:
    ssh student@172.16.1.15 -L 2223:172.16.40.10:22
    or
    ssh -L 2223:172.16.40.10:22 student@172.16.1.15

    ssh student@localhost -p 2222


Forward Through Tunnel: -This goes further into the network that we used during Local Port Forwarding
Internet_Host:
ssh student@172.16.1.15 -L 2222:172.16.40.10:22
ssh student@localhost -p 2222 -L 3322:172.16.82.106:22

ssh student@localhost -p 3322

Dynamic Port Forwarding
ssh <user>@<server ip> -p <alt port> -D <port> -NT
or
ssh -D <port> -p <alt port> <user>@<server ip> -NT

    Proxychains default port is 9050
    Creates a dynamic socks4 proxy that interacts alone, or with a previously established remote or local port forward.
    Allows the use of scripts and other userspace programs through the tunnel.

DPF 1-Step
Internet_Host:
ssh student@172.16.1.15 -D 9050
or
ssh -D 9050 student@172.16.1.15
    proxychains ./scan.sh
    proxychains nmap -Pn 172.16.40.0/27 -p 21-23,80
    proxychains ssh student@172.16.40.10
    proxychains telnet 172.16.40.10
    proxychains wget -r http://172.16.40.10
    proxychains wget -r ftp://172.16.40.10


DPF 2-Step
ssh student@172.16.1.15 -L 2222:172.16.40.10:22
or
ssh -L 2222:172.16.40.10:22 student@172.16.1.15

ssh student@localhost -p 2222 -D 9050
or
ssh -D 9050 student@localhost -p 2222


Remote Port Forwarding
ssh -p <optional alt port> <user>@<server ip> -R <remote bind port>:<tgt ip>:<tgt port> -NT
or
ssh -R <remote bind port>:<tgt ip>:<tgt port> -p <alt port> <user>@<server ip> -NT

RPF from Local Host
ssh student@10.10.0.40 -R 4422:localhost:22
or
ssh -R 4422:localhost:22 student@10.10.0.40

Internet Host:
ssh student@localhost -p 4422


RPF to Remote Target
Blue_DMZ_Host-1:
ssh student@10.10.0.40 -R 5523:172.16.40.10:23
or
ssh -R 5523:172.16.40.10:23 student@10.10.0.40

Internet_Host:
telnet localhost 5523











